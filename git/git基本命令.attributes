一、介绍：Git是目前世界上最先进的分布式版本控制系统。

二、安装git
   1)apt、rpm、homebrew、官方包、源码包
   2)安装后配置： git config --global user.name "Your Name"
               git config --global user.name "email@example.com"
               git config --global color.ui true

三、创建本地版本库ß
	1)创建空目录：mkdir 目录名
	           cd    目录名

	2)把目录变化git仓库：git init

四、把文件添加到版本库 [文件修改后需要执行②和③]
	1)版本库(目录)下新建一个文件。
	2)把文件添加到仓库：git add 文件名1 文件名2 文件3 ...... （文件放入暂存区）
	3)把文件提交到仓库：git commit -m "提交文字说明"         （文件放入分支）
	4)git commit -a 相当于②加③
ß
五、查看文件修改和状态
	1）查看仓库当前状态：git status
	2）查看文件修改：git diff 文件名  [仓库与目录文件的不同]
	              git diff HEAD 文件名 [工作区与最新版本库文件的不同]

六、历史记录及版本控制（时光机）
	1）查看文件提交日志：git log --pretty=oneline
	2）历史命令：gir reflog
	3）版本回退：git reset --hard HEAD
	   [HEAD^ 返回上一个版本，HEAD^^ 返回上上个版本，HEAD~n 返回上n个版本]
	4）版本控制(前进/回退)：git reset --hard 版本号(前五位)

七、撤销修改(处理)
	1）撤销文件在工作区的修改：git checkout 文件名
	2）撤销文件在暂存区的修改：git reset HAED 文件名
	                      git checkout 文件名
	3）撤销文件提交到分支的修改：git reset --hard 版本号(HEAD^)

八、删除文件
	1）删除工作区和版本库文件：git rm 文件名 [ -r 删除目录 ]
	                      git commit -m "提交文字说明"

	2）只删除工作区文件且更新版本库：rm 文件名
								git commit -am "提交文字说明"

	3）保留工作区文件，删除版本库：git rm --cached 文件名
	  						  git commit -m "提交文字说明"

	4）误删文件想恢复(参考第七点：撤销修改)：git checkout 文件名

九、远程仓库Github
	1）创建(注册)一个Github账号。
	2）本地创建ssh key。 终端输入： ssh-keygen -t rsa -C "email@example.com" 
	  [之后一直回车]
	3）远程仓库设置：打开Github官网 →→→ Settings →→→ SSH keys →→→ New SSH key →→→ 输入Title和key[ 本地隐藏文件 id_rsa.pub 查看 ] →→→ Add SSH key 。

十、添加远程库(本地→→→远程)
	1）Gihub创建一个新库。New repository
	2）本地(终端)关联远程库：git remote add origin git@github.com:用户名/库名.git
	3）同步远程库(本地文件提交到github)：git push -u origin master [第一次提交需要加-u,之后不用]
	
十一、克隆远程库(远程→→→本地)：git clone git@github.com:用户名/库名.git	

【Git鼓励大量使用分支】
master 分支用于提交和发布版本
dev 分支用于开发
bug 分支用于修复bug
feature 分支用于开发新功能

十二、创建、合并等分支命令
	1）创建分支：git branch 分支名
	2）切换分支：git checkout 分支名
	3）创建并切换分支：git checkout -b 分支名 [作用相当于1+2]
	4）查看当前分支：git branch
	5）合并指定分支到当前分支：git merge 分支名
	6）删除分支：git branch -d 分支名
	7）强制删除(没有合并)分支：git branch -D 分支名
	8）查看分支合并图：git log --graph --pretty=oneline --abbrev-commit
	9）不用FastForward模式合并分支：git merge --no-ff -m "合并文字说明" 分支名

十三、stash（储藏、备份、隐藏）文件——修bug时，储藏未完成工作
	1）储藏当前工作区（未提交到库的文件）：git stash
	2）查看stash内容：git stash list
	3）恢复储藏文件：git stash apply
	4）恢复指定的储藏文件：git stash apply stash@{n}
	5）删除储藏内容(记录)：git stash drop
	6）恢复储藏文件同时删除记录：git stash pop [作用相当于3+5]

十四、多人协作(推送修改→如果推送失败，就拉取试图与本地合并→如果拉取失败，就把本地分支与远程分支建立关系)
	1）查看远程库信息：git remote -v
	2）本地推送到远程：git push origin 分支名
	3）本地抓取远程新提交：git pull
	4）本地创建与远程对应的分支(未有分支)：git checkout -b 分支名 origin/分支名
	5）本地分支与远程分支关联(已有分支)：git branch --set-upstream-to 分支名 origin/分支名
	6）使提交历史变简洁(已提交到远程库的不适用)：git rebase

十五、创建和操作标签 [先切换分支]
	1）新建标签：git tag 标签名 版本号 [不写版本号默认HEAD]
	2）新建标签时加上文字说明：git tag -a 标签名 -m "文字说明"
	3）查看所有标签：git tag
	4）查看某个标签：git show 标签名
	5）删除标签：git tag -d 标签名
	6）推送一个本地标签：git push origin 标签名
	7）推送全部本地标签：git push origin --tags
	8）删除一个远程标签：git push origin :refs/tags/标签名

十六、使用Github[Fork一个开源仓库到自己的仓库里，本地git clone]

十七、设置忽略文件
	[一些重要信息文件和系统自动生成的文件，如果不想提交，可以把它们的名字写入.gitignore_global,被忽略文件git不会管，也不会报错]
	1）编辑忽略文件：编辑隐藏文件'.gitignore_global'，写入文件名或文件后缀 ‘*.ini’
	2）被忽略文件强制添加到暂存区：git add -f 文件名
	3）检查忽略文件：git check-ignore -v 文件名

十八、配置别名
	1）git config --global alias.别名 原命令名
	2）git config --global alias.co checkout
	3）git config --global alias.unstage 'reset HEAD'

十九、搭建Git服务器（只用于局域共享，不用于工作）
	1）服务器安装Git：yum、apt
	2）服务器新建一个新用户：sudo adduser git
	3）创建证书登录：把本地‘id_rsa.pub’公钥写入到服务器‘/home/git/.ssh/authorized_keys’文件中[没有就新建一个]
	4）初始化git仓库：sudo git init --bare 目录.git
	5）修改权限：sudo chown -R git:git 文件名
	           sudo chmod -R 777 文件名
	6）禁用shell登录：编辑‘/etc/passwd’ 把git用户那一行修改 ‘/bin/bash’→→→‘/urs/bin/git-shell’
	之后就是
	本地git clone 、 git pull 和git push
